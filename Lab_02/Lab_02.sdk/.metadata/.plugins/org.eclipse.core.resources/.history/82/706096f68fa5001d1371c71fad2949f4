#include <stdio.h>

int main(void){
	uint32_t *regmap = (uint32_t *) 0x70000000;

	for(size_t i = -100; i < 100; i++){
		regmap[0] = i;
		for(size_t j = -100; j < 100; j++){
			regmap[1] = j;

			//ADD
			regmap[2] = 4;
			size_t r = i + j;
			printf("%2zu + %2zu = %3zu (%s)\n", i, j, r);
			if(regmap[0] != r){
				printf("ERR");
			}

			//UADD
			regmap[2] = 5;
			 r = i + j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//SUB
			regmap[2] = 6;
			 r = i - j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//USUB
			regmap[2] = 7;
			 r = i - j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//logical and
			regmap[2] = 0;
			size_t r = i && j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//logical or
			regmap[2] = 1;
			 r = i || j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//logical XOR
			regmap[2] = 2;
			 r = i^j;
			if(regmap[0] != r){
				printf("ERR");
			}

			//logical NOR
			regmap[2] = 3;
			 r = !(i || j);
			if(regmap[0] != r){
				printf("ERR");
			}

			//Comparator STL
			regmap[2] = 10;
			if(i < j){
				r = 1;
			}
			else{
				r = 0;
			}
			if(regmap[0] != r){
				printf("ERR");
			}

			//Comparator STLU
			regmap[2] = 11;
			if(i < j){
				r = 1;
			}
			else{
				r = 0;
			}
			if(regmap[0] != r){
				printf("ERR");
			}
		}


		for(size_t k = -32; k < 32; k++){

			//LSL
			regmap[2] = 12;
			size_t r = i << k;
			if(regmap[0] != r){
				printf("ERR");
			}


			//LSR
			regmap[2] = 14;
			r = i >> k;
			if(regmap[0] != r){
				printf("ERR");
			}

			//ASR
			regmap[2] = 15;
			r = i << k;
			if(regmap[0] != r){
				printf("ERR");
			}
		}
	}
}
